{"version":3,"file":"static/js/617.c8fde157.chunk.js","mappings":"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","sources":["components/Keyboard/Keyboard.jsx","Pages/Dialer/Dialer.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/LinkToContact/LinkToContact.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/Error/Error.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","redux/filter/selectors.js","utils/phoneAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Keyboard from 'react-simple-keyboard';\nimport inputMask from 'simple-keyboard-input-mask';\nimport 'react-simple-keyboard/build/css/index.css';\nimport './index.css';\n\nclass Numpad extends Component {\n  state = {\n    layoutName: 'default',\n    input: '',\n  };\n\n  onChange = input => {\n    this.props.onNumberChange(input);\n    this.setState({\n      input: input,\n    });\n  };\n\n  onKeyPress = button => {\n    /**\n     * If you want to handle the shift and caps lock buttons\n     */\n    if (button === '{shift}' || button === '{shift2}') this.handleShift();\n\n    const inputValue = this.state.input;\n\n    if (button === '{call}') {\n      this.props.onCallBtnPress(inputValue);\n      this.keyboard.clearInput();\n      return;\n    }\n    if (button === '{save}') {\n      this.props.onSaveBtnPress(inputValue);\n      this.keyboard.clearInput();\n      return;\n    }\n  };\n\n  handleShift = () => {\n    let layoutName = this.state.layoutName;\n\n    this.setState({\n      layoutName: layoutName === 'default' ? 'shift' : 'default',\n    });\n  };\n\n  onChangeInput = event => {\n    let input = event.target.value;\n    this.props.onFilterChange(input);\n    this.setState(\n      {\n        input: input,\n      },\n      () => {\n        this.keyboard.setInput(input);\n      }\n    );\n  };\n\n  inputStyle = {\n    width: '100%',\n    height: '100px',\n    padding: '10px',\n    fontSize: 20,\n    border: 0,\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          readOnly=\"readonly\"\n          value={this.state.input}\n          style={this.inputStyle}\n          placeholder={'(99) 9999-9999'}\n          onChange={e => this.onChangeInput(e)}\n        />\n        <Keyboard\n          keyboardRef={r => (this.keyboard = r)}\n          theme={'hg-theme-default hg-layout-numeric numeric-theme'}\n          layoutName={this.state.layoutName}\n          onChange={input => this.onChange(input)}\n          onKeyPress={button => this.onKeyPress(button)}\n          onHold={console.log}\n          disableCaretPositioning={true}\n          disableButtonHold={false}\n          display={{\n            '{call}': 'CALL',\n            '{save}': 'SAVE',\n            '{bksp}': 'backspace',\n            '{shift}': '*/+',\n            '{shift2}': '123',\n            '{//}': ' ',\n          }}\n          layout={{\n            default: [\n              '{call} {save} {bksp}',\n              '1 2 3',\n              '4 5 6',\n              '7 8 9',\n              '{shift} 0 #',\n            ],\n            shift: [\n              '{//} {//} {//}',\n              '{//} {//} {//}',\n              '{//} {//} {//}',\n              '{//} {//} {//}',\n              '* + {shift2}',\n            ],\n          }}\n          buttonTheme={[\n            { class: 'customBtn callBtn', buttons: '{call}' },\n            { class: 'customBtn saveBtn', buttons: '{save}' },\n            { class: 'customBtn backspaceBtn', buttons: '{bksp}' },\n          ]}\n          inputMask={'(99) 9999-9999'}\n          modules={[inputMask]}\n        />\n      </div>\n    );\n  }\n}\n\nNumpad.propTypes = {\n  onNumberChange: PropTypes.func.isRequired,\n};\n\nexport default Numpad;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport { makeCall } from 'utils/phoneAPI';\nimport { Box } from 'components/reusableComponents';\nimport Numpad from 'components/Keyboard';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport Error from 'components/Error';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsAPI';\n\nconst Dialer = () => {\n  const [number, setNumber] = useState('');\n  const [locFilter, setLocFilter] = useState('');\n  const filter = useSelector(selectFilter);\n  const navigate = useNavigate();\n  const { data: contacts = [], error = '' } = useFetchContactsQuery();\n  useEffect(() => {\n    setLocFilter(filter);\n  }, [filter]);\n\n  const filteredContacts = contacts.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(locFilter) || number.includes(locFilter)\n  );\n\n  const onCallBtnPress = () => makeCall(number);\n\n  const onSaveBtnPress = () => {\n    if (!number) return;\n    navigate('new', { state: { number } });\n  };\n\n  const onNumberChange = number => {\n    setNumber(number);\n    setLocFilter(number);\n  };\n\n  return (\n    <>\n      {error ? (\n        <Error error={error} />\n      ) : (\n        <>\n          <Filter />\n          <Box height={270} overflowY=\"scroll\">\n            {locFilter && <ContactsList contacts={filteredContacts} />}\n          </Box>\n          <Numpad\n            onCallBtnPress={onCallBtnPress}\n            onSaveBtnPress={onSaveBtnPress}\n            onNumberChange={onNumberChange}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Dialer;\n","import styled from '@emotion/styled';\n\nconst ContactsItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  padding: 4px 8px;\n  font-size: 20px;\n`;\n\nconst Avatar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 60px;\n  width: 60px;\n  border-radius: 50%;\n  background-color: black;\n  color: white;\n  font-size: 40px;\n`;\n\nconst ContactName = styled.span`\n  display: block;\n  font-weight: 600;\n  font-size: 24px;\n`;\n\nexport { ContactsItemStyled, Avatar, ContactName };\n","import PropTypes from 'prop-types';\nimport { useLocation, Link } from 'react-router-dom';\nimport { useRef, useEffect } from 'react';\n\nconst LinkToContact = ({ id, children }) => {\n  const linkRef = useRef();\n  const location = useLocation();\n  const prevId = location.state?.id;\n\n  useEffect(() => {\n    if (!linkRef.current) return;\n    if (prevId && prevId === id)\n      linkRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\n  }, [id, prevId]);\n\n  const pathToContact =\n    location.pathname === '/' ? `contacts/${id}` : id.toString();\n\n  return (\n    <Link ref={linkRef} to={pathToContact} state={{ from: location, id }}>\n      {children}\n    </Link>\n  );\n};\n\nLinkToContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default LinkToContact;\n","import PropTypes from 'prop-types';\nimport { ContactsItemStyled, Avatar, ContactName } from './ContactsItem.styled';\nimport LinkToContact from 'components/LinkToContact';\n\nconst ContactsItem = ({ data: { name, number, extraId } }) => {\n  const avatarLetter = name[0].toUpperCase();\n  return (\n    <>\n      <LinkToContact id={extraId}>\n        <ContactsItemStyled>\n          <Avatar>\n            <span>{avatarLetter}</span>\n          </Avatar>\n          <div>\n            <ContactName>{name}</ContactName>\n            <span>{number}</span>\n          </div>\n        </ContactsItemStyled>\n      </LinkToContact>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    extraId: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactsItem;\n","import PropTypes from 'prop-types';\nimport ContactsItem from 'components/ContactsItem';\nimport { Box } from 'components/reusableComponents';\nconst ContactsList = ({ contacts = [] }) => {\n  return (\n    <Box>\n      <ul>\n        {contacts.length > 0 &&\n          contacts.map(item => <ContactsItem key={item.id} data={item} />)}\n      </ul>\n    </Box>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/reusableComponents';\n\nconst Error = ({ error }) => {\n  const errorMsg = `${error?.data} (status: ${error?.status})`;\n  return (\n    <Box p={15}>\n      <h1>OOOPS...</h1>\n      <h2>Something went wrong</h2>\n      <h2>Please reload page or check URL</h2>\n      <p>Info: {errorMsg}</p>\n    </Box>\n  );\n};\n\nError.propTypes = {\n  msg: PropTypes.string,\n};\nexport default Error;\n","import styled from '@emotion/styled';\n\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n`;\n\nexport { Input };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { Input } from './Filter.styled';\nimport { useEffect } from 'react';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  useEffect(() => {\n    return () => {\n      dispatch(setFilter(''));\n    };\n  }, [dispatch]);\n\n  function onChange(e) {\n    const query = e.currentTarget.value;\n    dispatch(setFilter(query));\n  }\n  return (\n    <Input\n      value={filter}\n      name=\"filter\"\n      onChange={onChange}\n      type=\"text\"\n      placeholder=\"Type to search\"\n    />\n  );\n}\n","const selectFilter = state => state.filter;\n\nexport { selectFilter };\n","const makeCall = number => (window.location.href = `tel:${number}`);\nconst writeEmail = email => (window.location.href = `mailto:${email}`);\n\nexport { makeCall, writeEmail };\n"],"names":["Numpad","state","layoutName","input","onChange","props","onNumberChange","setState","onKeyPress","button","handleShift","inputValue","onCallBtnPress","keyboard","clearInput","onSaveBtnPress","onChangeInput","event","target","value","onFilterChange","setInput","inputStyle","width","height","padding","fontSize","border","readOnly","this","style","placeholder","e","keyboardRef","r","theme","onHold","console","log","disableCaretPositioning","disableButtonHold","display","layout","default","shift","buttonTheme","class","buttons","inputMask","modules","Component","useState","number","setNumber","locFilter","setLocFilter","filter","useSelector","selectFilter","navigate","useNavigate","useFetchContactsQuery","data","contacts","error","useEffect","filteredContacts","name","toLowerCase","includes","Error","Filter","overflowY","ContactsList","makeCall","ContactsItemStyled","styled","Avatar","ContactName","id","children","linkRef","useRef","location","useLocation","prevId","current","scrollIntoView","behavior","block","pathToContact","pathname","toString","Link","ref","to","from","extraId","avatarLetter","toUpperCase","length","map","item","errorMsg","status","p","Input","dispatch","useDispatch","setFilter","query","currentTarget","type","window","href","writeEmail","email"],"sourceRoot":""}