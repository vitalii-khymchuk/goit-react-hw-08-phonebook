{"version":3,"file":"static/js/639.7f14d414.chunk.js","mappings":"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","sources":["Pages/ContactInfo/ContactInfo.styled.jsx","Pages/ContactInfo/ContactInfo.jsx","components/Error/Error.jsx","utils/phoneAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ProfileAvatar = styled.img`\n  height: 150px;\n  width: 150px;\n  position: absolute;\n  bottom: 0;\n  right: 50px;\n  transform: translateY(50%);\n\n  border-radius: 50%;\n`;\n\nconst Name = styled.p`\n  overflow: hidden;\n  max-width: 260px;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 60px;\n`;\n\nconst Info = styled.p`\n  font-size: 24px;\n  margin-bottom: 15px;\n`;\n\nconst CallEmailBtn = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px;\n  border-radius: 5px;\n  &:focus,\n  &:hover {\n    background-color: rgba(100, 100, 100, 0.2);\n  }\n`;\n\nconst NavBar = styled.div`\n  height: 50px;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst NavItem = styled.button`\n  padding: 5px;\n  font-size: 16px;\n  color: white;\n  border-radius: 10px;\n  background-color: transparent;\n  border: none;\n  &:hover,\n  &:focus {\n    color: orange;\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nexport { ProfileAvatar, Name, Info, CallEmailBtn, NavBar, NavItem };\n","import { useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport {\n  ProfileAvatar,\n  Name,\n  Info,\n  CallEmailBtn,\n  NavBar,\n  NavItem,\n} from './ContactInfo.styled';\nimport { IoCallOutline } from 'react-icons/io5';\nimport { AiOutlineMail } from 'react-icons/ai';\nimport { makeCall, writeEmail } from 'utils/phoneAPI';\nimport { Box } from 'components/reusableComponents';\nimport avatarPlaceholder from 'photos/avatarIsLoading.gif';\nimport Error from 'components/Error';\nimport {\n  useGetContactInfoQuery,\n  useDeleteContactsInfoMutation,\n} from 'redux/contactsInfo/contactsInfoAPI';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/contacts/contactsAPI';\n\nimport { toast } from 'react-toastify';\n\nconst formateDate = date => new Date(date).toLocaleString();\n\nconst ContactInfo = () => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const { id: extraId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { data: contacts = [] } = useFetchContactsQuery();\n  const {\n    data: contactInfo = {},\n    isFetching,\n    error,\n  } = useGetContactInfoQuery(extraId);\n\n  const baseId =\n    contacts.length > 0\n      ? contacts.find(item => item.extraId === extraId).id\n      : '';\n\n  const [\n    deleteContactFromList,\n    { isSuccess: isSuccess1, isLoading: isLoading1, isError: isError1 },\n  ] = useDeleteContactMutation(baseId);\n  const [\n    deleteContactInfo,\n    { isSuccess: isSuccess2, isLoading: isLoading2, isError: isError2 },\n  ] = useDeleteContactsInfoMutation(extraId);\n\n  !isLoading2 &&\n    isSuccess2 &&\n    !isLoading1 &&\n    isSuccess1 &&\n    toast.success('Contact deleted!', {\n      toastId: '3',\n    });\n  (!isLoading2 && isError2) ||\n    (!isLoading1 &&\n      isError1 &&\n      toast.error(\"Contact was'nt deleted...\", {\n        toastId: '4',\n      }));\n\n  const { avatar, createdAt, email, name, phone } = contactInfo;\n\n  const profileAvatar = isFetching || !avatar ? avatarPlaceholder : avatar;\n  const backPath = location.state?.from ?? '/';\n\n  const onCallClick = () => makeCall(phone);\n  const onEmailClick = () => writeEmail(email);\n  const onDeleteClick = async () => {\n    setIsDeleting(true);\n    await deleteContactInfo(extraId);\n    await deleteContactFromList(baseId);\n    navigate(backPath, { replace: true, state: location.state });\n  };\n  const onBackClick = () => {\n    navigate(backPath, { state: location.state });\n  };\n\n  const onEditClick = () => {\n    navigate(`/edit/${extraId}`, {\n      state: { ...location.state, contactsInfo: contactInfo, baseId },\n    });\n  };\n\n  return (\n    <Box\n      display=\"grid\"\n      gridTemplateRows=\"200px 1fr\"\n      width={480}\n      height={800}\n      border=\"1px solid black\"\n      mx=\"auto\"\n    >\n      <>\n        <Box bg=\"grey\" position=\"relative\">\n          <NavBar>\n            <NavItem type=\"button\" onClick={onEditClick}>\n              Edit\n            </NavItem>\n            <NavItem type=\"button\" onClick={onDeleteClick}>\n              Delete\n            </NavItem>\n            <NavItem type=\"button\" onClick={onBackClick}>\n              Back\n            </NavItem>\n          </NavBar>\n          <ProfileAvatar src={profileAvatar} alt={`${name}'s avatar`} />\n        </Box>\n        {error && <Error error={error} />}\n        {isDeleting && <h2>Deleting...</h2>}\n        {!error && !isDeleting && (\n          <Box mt=\"10px\" px=\"15px\">\n            <Name>{name}</Name>\n            <CallEmailBtn onClick={onCallClick}>\n              <Info>{phone}</Info>\n              <IoCallOutline size={24} />\n            </CallEmailBtn>\n            {email && (\n              <CallEmailBtn onClick={onEmailClick}>\n                <Info>{email}</Info>\n                <AiOutlineMail size={24} />\n              </CallEmailBtn>\n            )}\n            <Info>\n              Created at: <br /> {formateDate(createdAt)}\n            </Info>\n          </Box>\n        )}\n      </>\n    </Box>\n  );\n};\n\nexport default ContactInfo;\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/reusableComponents';\n\nconst Error = ({ error }) => {\n  const errorMsg = `${error?.data} (status: ${error?.status})`;\n  return (\n    <Box p={15}>\n      <h1>OOOPS...</h1>\n      <h2>Something went wrong</h2>\n      <h2>Please reload page or check URL</h2>\n      <p>Info: {errorMsg}</p>\n    </Box>\n  );\n};\n\nError.propTypes = {\n  msg: PropTypes.string,\n};\nexport default Error;\n","const makeCall = number => (window.location.href = `tel:${number}`);\nconst writeEmail = email => (window.location.href = `mailto:${email}`);\n\nexport { makeCall, writeEmail };\n"],"names":["ProfileAvatar","styled","Name","Info","CallEmailBtn","NavBar","NavItem","useState","isDeleting","setIsDeleting","extraId","useParams","id","navigate","useNavigate","location","useLocation","useFetchContactsQuery","data","contacts","useGetContactInfoQuery","contactInfo","isFetching","error","baseId","length","find","item","useDeleteContactMutation","deleteContactFromList","isSuccess1","isSuccess","isLoading1","isLoading","isError1","isError","useDeleteContactsInfoMutation","deleteContactInfo","isSuccess2","isLoading2","isError2","toast","toastId","date","avatar","createdAt","email","name","phone","profileAvatar","avatarPlaceholder","backPath","state","from","onDeleteClick","replace","display","gridTemplateRows","width","height","border","mx","bg","position","type","onClick","contactsInfo","src","alt","Error","mt","px","makeCall","size","writeEmail","Date","toLocaleString","errorMsg","status","p","number","window","href"],"sourceRoot":""}